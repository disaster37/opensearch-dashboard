// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/disaster37/opensearch-dashboard/v2/api (interfaces: Api,SavedObjectApi,ShortenUrlApi,StatusApi)
//
// Generated by this command:
//
//	mockgen --build_flags=--mod=mod -destination=mocks/api.go -package=mocks github.com/disaster37/opensearch-dashboard/v2/api Api,SavedObjectApi,ShortenUrlApi,StatusApi
//
// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	api "github.com/disaster37/opensearch-dashboard/v2/api"
	resty "github.com/go-resty/resty/v2"
	gomock "go.uber.org/mock/gomock"
)

// MockApi is a mock of Api interface.
type MockApi struct {
	ctrl     *gomock.Controller
	recorder *MockApiMockRecorder
}

// MockApiMockRecorder is the mock recorder for MockApi.
type MockApiMockRecorder struct {
	mock *MockApi
}

// NewMockApi creates a new mock instance.
func NewMockApi(ctrl *gomock.Controller) *MockApi {
	mock := &MockApi{ctrl: ctrl}
	mock.recorder = &MockApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockApi) EXPECT() *MockApiMockRecorder {
	return m.recorder
}

// Client mocks base method.
func (m *MockApi) Client() *resty.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Client")
	ret0, _ := ret[0].(*resty.Client)
	return ret0
}

// Client indicates an expected call of Client.
func (mr *MockApiMockRecorder) Client() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Client", reflect.TypeOf((*MockApi)(nil).Client))
}

// SavedObject mocks base method.
func (m *MockApi) SavedObject() api.SavedObjectApi {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SavedObject")
	ret0, _ := ret[0].(api.SavedObjectApi)
	return ret0
}

// SavedObject indicates an expected call of SavedObject.
func (mr *MockApiMockRecorder) SavedObject() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SavedObject", reflect.TypeOf((*MockApi)(nil).SavedObject))
}

// ShortenUrl mocks base method.
func (m *MockApi) ShortenUrl() api.ShortenUrlApi {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShortenUrl")
	ret0, _ := ret[0].(api.ShortenUrlApi)
	return ret0
}

// ShortenUrl indicates an expected call of ShortenUrl.
func (mr *MockApiMockRecorder) ShortenUrl() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShortenUrl", reflect.TypeOf((*MockApi)(nil).ShortenUrl))
}

// Status mocks base method.
func (m *MockApi) Status() api.StatusApi {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Status")
	ret0, _ := ret[0].(api.StatusApi)
	return ret0
}

// Status indicates an expected call of Status.
func (mr *MockApiMockRecorder) Status() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Status", reflect.TypeOf((*MockApi)(nil).Status))
}

// MockSavedObjectApi is a mock of SavedObjectApi interface.
type MockSavedObjectApi struct {
	ctrl     *gomock.Controller
	recorder *MockSavedObjectApiMockRecorder
}

// MockSavedObjectApiMockRecorder is the mock recorder for MockSavedObjectApi.
type MockSavedObjectApiMockRecorder struct {
	mock *MockSavedObjectApi
}

// NewMockSavedObjectApi creates a new mock instance.
func NewMockSavedObjectApi(ctrl *gomock.Controller) *MockSavedObjectApi {
	mock := &MockSavedObjectApi{ctrl: ctrl}
	mock.recorder = &MockSavedObjectApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSavedObjectApi) EXPECT() *MockSavedObjectApiMockRecorder {
	return m.recorder
}

// BulkCreate mocks base method.
func (m *MockSavedObjectApi) BulkCreate(arg0 string, arg1 bool, arg2 []api.Object) ([]api.Object, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkCreate", arg0, arg1, arg2)
	ret0, _ := ret[0].([]api.Object)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BulkCreate indicates an expected call of BulkCreate.
func (mr *MockSavedObjectApiMockRecorder) BulkCreate(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkCreate", reflect.TypeOf((*MockSavedObjectApi)(nil).BulkCreate), arg0, arg1, arg2)
}

// BulkGet mocks base method.
func (m *MockSavedObjectApi) BulkGet(arg0 string, arg1 []api.SavedObjectBulkGetOption) ([]api.Object, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkGet", arg0, arg1)
	ret0, _ := ret[0].([]api.Object)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BulkGet indicates an expected call of BulkGet.
func (mr *MockSavedObjectApiMockRecorder) BulkGet(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkGet", reflect.TypeOf((*MockSavedObjectApi)(nil).BulkGet), arg0, arg1)
}

// Create mocks base method.
func (m *MockSavedObjectApi) Create(arg0 string, arg1 *api.Object, arg2 bool) (*api.Object, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1, arg2)
	ret0, _ := ret[0].(*api.Object)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockSavedObjectApiMockRecorder) Create(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSavedObjectApi)(nil).Create), arg0, arg1, arg2)
}

// Delete mocks base method.
func (m *MockSavedObjectApi) Delete(arg0, arg1, arg2 string, arg3 bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockSavedObjectApiMockRecorder) Delete(arg0, arg1, arg2, arg3 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockSavedObjectApi)(nil).Delete), arg0, arg1, arg2, arg3)
}

// Export mocks base method.
func (m *MockSavedObjectApi) Export(arg0 string, arg1 api.SavedObjectExportOption) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Export", arg0, arg1)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Export indicates an expected call of Export.
func (mr *MockSavedObjectApiMockRecorder) Export(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Export", reflect.TypeOf((*MockSavedObjectApi)(nil).Export), arg0, arg1)
}

// Find mocks base method.
func (m *MockSavedObjectApi) Find(arg0 string, arg1 api.SavedObjectFindOption) ([]api.Object, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Find", arg0, arg1)
	ret0, _ := ret[0].([]api.Object)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Find indicates an expected call of Find.
func (mr *MockSavedObjectApiMockRecorder) Find(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Find", reflect.TypeOf((*MockSavedObjectApi)(nil).Find), arg0, arg1)
}

// Get mocks base method.
func (m *MockSavedObjectApi) Get(arg0, arg1, arg2 string) (*api.Object, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2)
	ret0, _ := ret[0].(*api.Object)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockSavedObjectApiMockRecorder) Get(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockSavedObjectApi)(nil).Get), arg0, arg1, arg2)
}

// Import mocks base method.
func (m *MockSavedObjectApi) Import(arg0 string, arg1 api.SavedObjectImportOption, arg2 []byte) (map[string]any, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Import", arg0, arg1, arg2)
	ret0, _ := ret[0].(map[string]any)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Import indicates an expected call of Import.
func (mr *MockSavedObjectApiMockRecorder) Import(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Import", reflect.TypeOf((*MockSavedObjectApi)(nil).Import), arg0, arg1, arg2)
}

// Update mocks base method.
func (m *MockSavedObjectApi) Update(arg0 string, arg1 *api.Object) (*api.Object, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(*api.Object)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockSavedObjectApiMockRecorder) Update(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockSavedObjectApi)(nil).Update), arg0, arg1)
}

// MockShortenUrlApi is a mock of ShortenUrlApi interface.
type MockShortenUrlApi struct {
	ctrl     *gomock.Controller
	recorder *MockShortenUrlApiMockRecorder
}

// MockShortenUrlApiMockRecorder is the mock recorder for MockShortenUrlApi.
type MockShortenUrlApiMockRecorder struct {
	mock *MockShortenUrlApi
}

// NewMockShortenUrlApi creates a new mock instance.
func NewMockShortenUrlApi(ctrl *gomock.Controller) *MockShortenUrlApi {
	mock := &MockShortenUrlApi{ctrl: ctrl}
	mock.recorder = &MockShortenUrlApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShortenUrlApi) EXPECT() *MockShortenUrlApiMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockShortenUrlApi) Create(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockShortenUrlApiMockRecorder) Create(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockShortenUrlApi)(nil).Create), arg0)
}

// MockStatusApi is a mock of StatusApi interface.
type MockStatusApi struct {
	ctrl     *gomock.Controller
	recorder *MockStatusApiMockRecorder
}

// MockStatusApiMockRecorder is the mock recorder for MockStatusApi.
type MockStatusApiMockRecorder struct {
	mock *MockStatusApi
}

// NewMockStatusApi creates a new mock instance.
func NewMockStatusApi(ctrl *gomock.Controller) *MockStatusApi {
	mock := &MockStatusApi{ctrl: ctrl}
	mock.recorder = &MockStatusApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatusApi) EXPECT() *MockStatusApiMockRecorder {
	return m.recorder
}

// Status mocks base method.
func (m *MockStatusApi) Status() (map[string]any, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Status")
	ret0, _ := ret[0].(map[string]any)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Status indicates an expected call of Status.
func (mr *MockStatusApiMockRecorder) Status() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Status", reflect.TypeOf((*MockStatusApi)(nil).Status))
}
