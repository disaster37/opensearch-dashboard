// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/disaster37/opensearch-dashboard/v2 (interfaces: Client)
//
// Generated by this command:
//
//	mockgen --build_flags=--mod=mod -destination=mocks/client.go -package=mocks github.com/disaster37/opensearch-dashboard/v2 Client
//
// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	api "github.com/disaster37/opensearch-dashboard/v2/api"
	resty "github.com/go-resty/resty/v2"
	gomock "go.uber.org/mock/gomock"
)

// MockClient is a mock of Client interface.
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient.
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance.
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// Client mocks base method.
func (m *MockClient) Client() *resty.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Client")
	ret0, _ := ret[0].(*resty.Client)
	return ret0
}

// Client indicates an expected call of Client.
func (mr *MockClientMockRecorder) Client() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Client", reflect.TypeOf((*MockClient)(nil).Client))
}

// SavedObject mocks base method.
func (m *MockClient) SavedObject() api.SavedObjectApi {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SavedObject")
	ret0, _ := ret[0].(api.SavedObjectApi)
	return ret0
}

// SavedObject indicates an expected call of SavedObject.
func (mr *MockClientMockRecorder) SavedObject() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SavedObject", reflect.TypeOf((*MockClient)(nil).SavedObject))
}

// ShortenUrl mocks base method.
func (m *MockClient) ShortenUrl() api.ShortenUrlApi {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShortenUrl")
	ret0, _ := ret[0].(api.ShortenUrlApi)
	return ret0
}

// ShortenUrl indicates an expected call of ShortenUrl.
func (mr *MockClientMockRecorder) ShortenUrl() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShortenUrl", reflect.TypeOf((*MockClient)(nil).ShortenUrl))
}

// Status mocks base method.
func (m *MockClient) Status() api.StatusApi {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Status")
	ret0, _ := ret[0].(api.StatusApi)
	return ret0
}

// Status indicates an expected call of Status.
func (mr *MockClientMockRecorder) Status() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Status", reflect.TypeOf((*MockClient)(nil).Status))
}
